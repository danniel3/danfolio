// Mixins from https://www.smashingmagazine.com/2015/06/responsive-typography-with-sass-maps/

// Breakpoints for CSS:
// - (min-width: 1350px)				- menu sidebar + full center + stretchy right
// - (min-width: 1000px) and (max-width: 1349px) 	- top menu (overflow > burger) + full center + no right
// - (min-width: 768px) and (max-width: 999px) 		- top menu burger + stretchy center
// - (max-width: 767px) 				- top menu burger + stretchy center

// Breakpoints for main images:
// - (min-width: 1350px)				- menu sidebar + full center + stretchy right
// - (min-width: 1000px) and (max-width: 1349px) 	- top menu (overflow > burger) + full center + no right
// - (min-width: 768px) and (max-width: 999px) 		- top menu burger + stretchy center
// - (max-width: 767px) 				- top menu burger + stretchy center


@mixin font-size($fs-map, $fs-breakpoints: $breakpoints) {
  @each $fs-breakpoint, $fs-font-size in $fs-map {
    @if $fs-breakpoint == null {
      @include make-font-size($fs-font-size);
    }
    @else {
      // If $fs-font-size is a key that exists in
      // $fs-breakpoints, use the value
      @if map-has-key($fs-breakpoints, $fs-breakpoint) {
        $fs-breakpoint: map-get($fs-breakpoints, $fs-breakpoint);
      }
      @media screen and (min-width: $fs-breakpoint) {
        @include make-font-size($fs-font-size);
      }
    }
  }
}

// Utility function for mixin font-size
@mixin make-font-size($fs-font-size) {
  // If $fs-font-size is a list, include
  // both font-size and line-height
  @if type-of($fs-font-size) == "list" {
    font-size: nth($fs-font-size, 1);		// 1st element = font-size
    @if (length($fs-font-size) > 1) {
      line-height: nth($fs-font-size, 2);	// 2nd element = line-height
      @if (length($fs-font-size) > 2) {
        margin: nth($fs-font-size, 3);		// 3rd element = margin ... can keep on adding elements
      }
    }
  }
  @else {
    font-size: $fs-font-size;
  }
}

// Variables defined:

$breakpoints: (
  small : 480px,
  medium: 700px,
  large : 1024px,
  xlarge: 1440px,
);

$p-font-sizes: (
  null  : (15px, 1.3),
  small : 16px,
  medium: (17px, 1.4, 2em),
  large : (19px, 1.45),
  xlarge: 20px,
);

$h1-font-sizes: (
  null	: (25px, 1.3),
);


// To use it, just use:

// p {
  // @include font-size($p-font-sizes);	Substituting with whichever size relevant
// }

// Check relevant em/rem sizes from here
// - https://engageinteractive.co.uk/blog/em-vs-rem-vs-px
